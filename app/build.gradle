/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.openjfx:javafx-controls:23'
    implementation 'org.openjfx:javafx-fxml:23'

    implementation 'org.hibernate:hibernate-core:6.3.1.Final' // Versione di Hibernate
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // API JPA
    implementation 'org.slf4j:slf4j-api:2.0.9' // Logger per Hibernate
    runtimeOnly 'mysql:mysql-connector-java:8.0.33' //database SQL

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0' // Test
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javafx {
    version = "23.0.1"
    modules = [ 'javafx.controls' ]
}

application {
    // Define the main class for the application.
    mainClass = 'it.unibo.taskhive.App'

    /*applicationDefaultJvmArgs = [
        '--module-path', System.getenv("PATH_TO_FX"),
        '--add-modules', 'javafx.controls,javafx.fxml'
    ]*/
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
